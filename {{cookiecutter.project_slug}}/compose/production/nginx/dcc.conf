# Upstream server, i.e. Gunicorn application.
upstream gunicorn {
    # docker will automatically resolve this to the correct address
    # because we use the same name as the service: "djangoapp"
    server django:5000;
}

# Reject all traffic without the proper HTTP_HOST headers
server {
    listen 80;
    server_name _ default;

    return 444;
}

# Redirect all non HTTPS (non 443) to 443.
server {
       listen         80;
       server_name    {{ cookiecutter.domain_name }};
       server_name    www.{{ cookiecutter.domain_name }};
       return         301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;

    server_name {{ cookiecutter.domain_name }};
    # add Strict-Transport-Security to prevent man in the middle attacks
    add_header Strict-Transport-Security "max-age=31536000";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options sameorigin always;
    add_header X-Content-Type-Options nosniff;
    
    # SSL optimization.
    keepalive_timeout   70;

    # SSL certificates.
    ssl_certificate     /etc/ssl/{{ cookiecutter.domain_name|replace('.', '_')|replace('-', '_') }}.cer;
    ssl_certificate_key /etc/ssl/{{ cookiecutter.domain_name|replace('.', '_')|replace('-', '_') }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    client_max_body_size 100M;

    location / {
        # everything is passed to Gunicorn
        proxy_pass http://gunicorn/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/ {
        alias /app/staticfiles/;
    }

    location /mediafiles/ {
        alias /app/mediafiles/;
    }
}

